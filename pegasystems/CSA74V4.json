{
  "questions": [
    {
      "id": "1",
      "name": "ABC Corp is having an ecommerce application where first time user need to be registered. While registering themselves, they are supposed to provide a billing and shipping address. If shipping address is same as billing address, user should select a checkbox to copy the billing address data to shipping address.",
      "hint": "SETTING PROPERTY VALUES AUTOMATICALLY",
      "image": "null.png",
      "type": "check",
      "options": [
        {
          "id": "2983",
          "answer": "Data transform can be helpful here to copy the data",
          "correctanswer": "true"
        },
        {
          "id": "2984",
          "answer": "Activity can be helpful here to copy the data",
          "correctanswer": "true"
        },
        {
          "id": "2985",
          "answer": "Flow would be helpful",
          "correctanswer": "false"
        },
        {
          "id": "2986",
          "answer": "section would be helpful",
          "correctanswer": "false"
        }
      ]
    },
    {
      "id": "2",
      "name": "ABC corp is having a insurance case. As per logic, a mediclaim child case can be initialised from insurance case. The mediclaim case should be copying some data already part of insurance case and some policy data from a data source. How to achieve it?",
      "hint": "ADDING OPTIONAL ACTIONS TO A CASE TYPE",
      "image": "null.png",
      "type": "check",
      "options": [
        {
          "id": "2983",
          "answer": "Use data propagation to copy the necessary data from the parent case",
          "correctanswer": "true"
        },
        {
          "id": "2984",
          "answer": "false",
          "correctanswer": "false"
        },
        {
          "id": "2985",
          "answer": "use pyDefault or pySetFieldDefaults to copy the Policy data from a data page populated with Policy data source",
          "correctanswer": "true"
        },
        {
          "id": "2986",
          "answer": "false",
          "correctanswer": "false"
        }
      ]
    },
    {
      "id": "3",
      "name": "Can I iterate over a page list or page group in data transform",
      "hint": "ADDING OPTIONAL ACTIONS TO A CASE TYPE",
      "image": "null.png",
      "type": "radio",
      "options": [
        {
          "id": "2983",
          "answer": "Yes",
          "correctanswer": "true"
        },
        {
          "id": "2984",
          "answer": "No",
          "correctanswer": "false"
        }
      ]
    },
    {
      "id": "4",
      "name": "Can I iterate over a value list or value group in data transform",
      "hint": "ADDING OPTIONAL ACTIONS TO A CASE TYPE",
      "image": "null.png",
      "type": "radio",
      "options": [
        {
          "id": "2983",
          "answer": "Yes",
          "correctanswer": "false"
        },
        {
          "id": "2984",
          "answer": "No",
          "correctanswer": "false"
        }
      ]
    },
    {
      "id": "5",
      "name": "I want to copy data from a page list to another pagelist. The source page list is supposed to have a property to check before copying. is this possible to achieve this is data transform",
      "hint": "ADDING OPTIONAL ACTIONS TO A CASE TYPE",
      "image": "null.png",
      "type": "radio",
      "options": [
        {
          "id": "2983",
          "answer": "Yes",
          "correctanswer": "true"
        },
        {
          "id": "2984",
          "answer": "No",
          "correctanswer": "true"
        }
      ]
    },
    {
      "id": "6",
      "name": "I want to copy data from a page list to another pagelist. The source page list is supposed to have a property to check before copying. is this possible to achieve this is data transform",
      "hint": "ADDING OPTIONAL ACTIONS TO A CASE TYPE",
      "image": "null.png",
      "type": "check",
      "options": [
        {
          "id": "2983",
          "answer": "For each Page in >> When >> Append To",
          "correctanswer": "true"
        },
        {
          "id": "2984",
          "answer": "For each Page in >> When >> Set",
          "correctanswer": "true"
        },
        {
          "id": "2983",
          "answer": "Set",
          "correctanswer": "false"
        },
        {
          "id": "2984",
          "answer": "For each Page in >> When >> Append and Map to",
          "correctanswer": "true"
        }
      ]
    },
    {
      "id": "7",
      "name": "A single value property named pyLabel should be referred as .pyLabel",
      "hint": "ADDING OPTIONAL ACTIONS TO A CASE TYPE",
      "image": "null.png",
      "type": "radio",
      "options": [
        {
          "id": "2983",
          "answer": "true",
          "correctanswer": "true"
        },
        {
          "id": "2986",
          "answer": "false",
          "correctanswer": "false"
        }
      ]
    },
    {
      "id": "8",
      "name": "ABC cop has a value group property name phone which might contain the value for Home and office. How to refer this property in data transform",
      "image": "null.png",
      "hint": "ADDING OPTIONAL ACTIONS TO A CASE TYPE",
      "type": "check",
      "options": [
        {
          "id": "2983",
          "answer": ".Phone(Home) and .Phone(Office)",
          "correctanswer": "true"
        },
        {
          "id": "2984",
          "answer": "Phone(Home) and Phone(Office)",
          "correctanswer": "false"
        }
      ]
    },
    {
      "id": "9",
      "name": "How to refer the last property of a value list property named Address.",
      "image": "null.png",
      "hint": "ADDING OPTIONAL ACTIONS TO A CASE TYPE",
      "type": "radio",
      "options": [
        {
          "id": "2983",
          "answer": ".Address(<LAST>)",
          "correctanswer": "true"
        },
        {
          "id": "2984",
          "answer": ".Address(LAST)",
          "correctanswer": "false"
        }
      ]
    },
    {
      "id": "10",
      "name": "How to refer the first property of a value list property named Address",
      "image": "null.png",
      "hint": "ADDING OPTIONAL ACTIONS TO A CASE TYPE",
      "type": "radio",
      "options": [
        {
          "id": "2983",
          "answer": ".Address(1)",
          "correctanswer": "true"
        },
        {
          "id": "2984",
          "answer": ".Address(<First>)",
          "correctanswer": "false"
        }
      ]
    },
    {
      "id": "11",
      "name": "You are doing an iteration in a pagelist named Address. how to access the current page of the page list",
      "image": "null.png",
      "type": "radio",
      "options": [
        {
          "id": "2983",
          "answer": ".Address(<CURRENT>)",
          "correctanswer": "true"
        },
        {
          "id": "2986",
          "answer": "false",
          "correctanswer": "false"
        }
      ],
      "hint": "ADDING OPTIONAL ACTIONS TO A CASE TYPE"
    },
    {
      "id": "12",
      "name": "Your page list contains 5 pages. You deleted a page indexed 3. What would be the index of 2nd last page.",
      "image": "null.png",
      "type": "radio",
      "options": [
        {
          "id": "2983",
          "answer": "1",
          "correctanswer": "false"
        },
        {
          "id": "2984",
          "answer": "2",
          "correctanswer": "false"
        },
        {
          "id": "2985",
          "answer": "3",
          "correctanswer": "true"
        },
        {
          "id": "2986",
          "answer": "4",
          "correctanswer": "false"
        }
      ],
      "hint": "ADDING OPTIONAL ACTIONS TO A CASE TYPE"
    },
    {
      "id": "13",
      "name": "How to add a data transform to a stage.",
      "image": "null.png",
      "type": "radio",
      "options": [
        {
          "id": "2983",
          "answer": "There is a process icon in every stage which can be used to open the flow behind this stage. Modify this flow's connector (between assignments in most cases) to add appropriate data transform",
          "correctanswer": "true"
        },
        {
          "id": "2984",
          "answer": "Without opening the flow of the stage , still we can add the data transform using panel",
          "correctanswer": "false"
        }
      ],
      "hint": "ADDING OPTIONAL ACTIONS TO A CASE TYPE"
    },
    {
      "id": "14",
      "name": "How to set default property values for a case.",
      "image": "null.png",
      "type": "check",
      "options": [
        {
          "id": "2983",
          "answer": "pySetFieldDefaults",
          "correctanswer": "true"
        },
        {
          "id": "2984",
          "answer": "pyDefault",
          "correctanswer": "true"
        },
        {
          "id": "2983",
          "answer": "pySetDefaults",
          "correctanswer": "false"
        },
        {
          "id": "2984",
          "answer": "pyDefaults",
          "correctanswer": "false"
        }
      ],
      "hint": "ADDING OPTIONAL ACTIONS TO A CASE TYPE"
    },
    {
      "id": "15",
      "name": "If the view is using a clipboard page and the clipboard page is not created, the view won`t be rendered.",
      "image": "null.png",
      "type": "radio",
      "options": [
        {
          "id": "2983",
          "answer": "true",
          "correctanswer": "true"
        },
        {
          "id": "2986",
          "answer": "false",
          "correctanswer": "false"
        }
      ],
      "hint": "ADDING OPTIONAL ACTIONS TO A CASE TYPE"
    },
    {
      "id": "16",
      "name": "Pega express or case designer uses pySetFieldDefaults to add/update/remove properties automatically",
      "image": "null.png",
      "type": "radio",
      "options": [
        {
          "id": "2983",
          "answer": "true",
          "correctanswer": "true"
        },
        {
          "id": "2984",
          "answer": "false",
          "correctanswer": "false"
        }
      ],
      "hint": "ADDING OPTIONAL ACTIONS TO A CASE TYPE"
    },
    {
      "id": "17",
      "name": "pyDefault data transform calls pySetFieldDefaults data transform",
      "type": "radio",
      "options": [
        {
          "id": "2983",
          "answer": "true",
          "correctanswer": "true"
        },
        {
          "id": "2984",
          "answer": "false",
          "correctanswer": "false"
        }
      ],
      "hint": "ADDING OPTIONAL ACTIONS TO A CASE TYPE"
    },
    {
      "id": "18",
      "name": "You are calling a data tranform named pyDefault from Abc-Sales-Work class. There is a data transform with the same name in Abc-Sales- class. calling the data transform pyDefault from Abc-Sales-Work class always calls pyDefault",
      "image": "null.png",
      "type": "check",
      "options": [
        {
          "id": "2983",
          "answer": "Yes",
          "correctanswer": "false"
        },
        {
          "id": "2984",
          "answer": "No",
          "correctanswer": "false"
        },
        {
          "id": "2984",
          "answer": "It may call the parent class data transform if superclass option is selected for the data tranaform in Abc-Sales- class",
          "correctanswer": "false"
        },
        {
          "id": "2984",
          "answer": "It may call the parent class data transform if superclass option is selected for the data tranaform in Abc-Sales-Work class",
          "correctanswer": "true"
        }
      ],
      "hint": "ADDING OPTIONAL ACTIONS TO A CASE TYPE"
    },
    {
      "id": "19",
      "name": "You are calling a data tranform named pyDefault from Abc-Sales-Work class. There is a data transform with the same name in Abc-Sales- class. the pyDefault data transform of Abc-Sales-Work class is having superclass option selected.If the pyDefault sets .pylabel to ABC-Sales- in pyDefault of ABC-Sales- class and sets .pylabel to ABC-Sales-Work in pyDefault of ABC-Sales-Work class\", which value of pylabel will prevail while executing pyDefault from ABC-Sales-Work context.",
      "image": "null.png",
      "type": "radio",
      "options": [
        {
          "id": "2983",
          "answer": "ABC-Sales-Work",
          "correctanswer": "true"
        },
        {
          "id": "2984",
          "answer": "ABC-Sales-",
          "correctanswer": "false"
        }
      ],
      "hint": "ADDING OPTIONAL ACTIONS TO A CASE TYPE"
    },
    {
      "id": "20",
      "name": "Super class data transform works even if the data transform name is not same.",
      "type": "radio",
      "options": [
        {
          "id": "2983",
          "answer": "true",
          "correctanswer": "false"
        },
        {
          "id": "2984",
          "answer": "false",
          "correctanswer": "true"
        }
      ],
      "image": "null.png",
      "hint": "BUILDING BLOCKS OF A PEGA APPLICATION"
    },
    {
      "id": "21",
      "name": "The class group initializes the urgency to 10 for every case it contains. However, we want to set the urgency of one of its child case to 30. How to do it?",
      "type": "radio",
      "options": [
        {
          "id": "2983",
          "answer": "Modify pyDefault data transform of class group to achieve it as per pega best practice",
          "correctanswer": "false"
        },
        {
          "id": "2984",
          "answer": "Modify pyDefault data transform of child case to set urgency to 30",
          "correctanswer": "true"
        },
        {
          "id": "2985",
          "answer": "Modify pyDefault data transform of child case to add 20 to the urgency value.",
          "correctanswer": "false"
        },
        {
          "id": "2986",
          "answer": "modify the pySetFieldDefaults data transform of class group",
          "correctanswer": "false"
        }
      ],
      "image": "null.png",
      "hint": "BUILDING BLOCKS OF A PEGA APPLICATION"
    },
    {
      "id": "22",
      "name": " In an event reservation application, you are configuring a Select Flights view in which in which the user enters the destination (.Destination). Later in the life cycle, you want to display the destination value as the location (.Location) value in a Hotel Reservation view. How do you configure the data transform? ",
      "image": "null.png",
      "hint": "BUILDING BLOCKS OF A PEGA APPLICATION",
      "type": "radio",
      "options": [
        {
          "id": "2983",
          "answer": "Set .Destination as the target property equal to .Location as the source property.",
          "correctanswer": "false"
        },
        {
          "id": "2984",
          "answer": "Apply the pySetFieldDefault data transform to set the .Location property when the user enters the .Destination property value",
          "correctanswer": "false"
        },
        {
          "id": "2985",
          "answer": "Set .Location as the target property equal to .Destination as the source property.",
          "correctanswer": "true"
        },
        {
          "id": "2986",
          "answer": "Invoke a when condition to update the .Location property value when the user enters a .Destination property value.",
          "correctanswer": "false"
        }
      ]
    },
    {
      "id": "23",
      "name": "The case type hierarchy in your insurance application consists of three case types: Claim (top level), Personal Injury (subcase type of Claim), and Emergency Care (subcase type of Personal Injury). In the Claim case type, a data transform sets the claim date and work urgency. To reduce maintenance, you do not want to set in each subcase the properties that were already set in the parent data transforms. However, you want to set work urgency to different values in each subcase type. What two configuration steps would you take to meet this requirement? (Choose Two)",
      "image": "null.png",
      "hint": "BUILDING BLOCKS OF A PEGA APPLICATION",
      "type": "check",
      "options": [
        {
          "id": "2983",
          "answer": "In the Claims data transform, for each subcase type, configure an Update Page action and set the work urgency value.",
          "correctanswer": "false"
        },
        {
          "id": "2984",
          "answer": "Select the Call superclass data transform option in the Claims data transform and clear the option in the Personal Injury and Emergency Care data transforms.",
          "correctanswer": "false"
        },
        {
          "id": "2985",
          "answer": "Select the Call superclass data transform option in each of the subcase type data transforms",
          "correctanswer": "true"
        },
        {
          "id": "2986",
          "answer": "In each subcase type data transform, set the work urgency to the required value.",
          "correctanswer": "true"
        }
      ]
    },
    {
      "id": "24",
      "name": " You have added a page list property named Dependents to a view in the Case Designer. This page list contains the property .Relationship. You want to display the list in the view and populate a field with the default value of \"Not Applicable.\" How do you configure the pySetFieldDefaults data transform to meet this requirement? ",
      "image": "null.png",
      "hint": "BUILDING BLOCKS OF A PEGA APPLICATION",
      "type": "radio",
      "options": [
        {
          "id": "2983",
          "answer": "Set .Dependents(1).Relationship to \"Not Applicable\"",
          "correctanswer": "true"
        },
        {
          "id": "2984",
          "answer": "Set .Dependents(1).pyLabel and a comment action using the value \"Not Applicable\"",
          "correctanswer": "false"
        },
        {
          "id": "2985",
          "answer": "Set \"Not Applicable\" to equal .Dependents(1).Relationship",
          "correctanswer": "false"
        },
        {
          "id": "2986",
          "answer": "Set .Dependents(1).pyLabel to an empty string and a parameter named \"Not Applicable\"",
          "correctanswer": "false"
        }
      ]
    },
    {
      "id": "25",
      "name": "In which two of the following situations would you use a data transform? (Choose Two)",
      "image": "null.png",
      "hint": "BUILDING BLOCKS OF A PEGA APPLICATION",
      "type": "check",
      "options": [
        {
          "id": "2983",
          "answer": "Set default values when creating a case",
          "correctanswer": "true"
        },
        {
          "id": "2984",
          "answer": "Copy data from one page to another",
          "correctanswer": "true"
        },
        {
          "id": "2985",
          "answer": "Create properties after the case has been created",
          "correctanswer": "false"
        },
        {
          "id": "2986",
          "answer": "Execute a flow action",
          "correctanswer": "false"
        }
      ]
    }
  ]
}
